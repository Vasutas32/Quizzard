@page "/quizzes"
@rendermode InteractiveServer
@inject Quizzard.Services.QuizService QuizService
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Quizzard.Models

<h3>Quiz List</h3>

@if (quizzes == null)
{
    <p>Loading quizzes...</p>
}
else if (quizzes.Count == 0)
{
    <p>No quizzes available.</p>
}
else
{
    <ul>
        @foreach (var quiz in quizzes)
        {
            <li style="margin-bottom: 10px; font-family:'Comic Sans MS';">
                @quiz.Title
                <button class="btn btn-success" style="margin: 5px;" @onclick="() => NavigateToQuiz(quiz.Id)">Start Quiz</button>
                <button class="btn btn-primary" @onclick="() => NaviagteToStatistics(quiz.Id)">Stats</button>
                <AuthorizeView Roles="Admin">
                    <button class="btn btn-warning" @onclick="() => NavigateToEditQuiz(quiz.Id)">Edit</button>
                </AuthorizeView>
            </li>
        }
    </ul>
}

<!-- Navigation Button to Add a New Quiz -->
<button class="btn btn-warning" @onclick="NavigateToCreateQuiz">Create New Quiz</button>

@code {
    private List<Quiz> quizzes;

    [Inject] private NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        quizzes = await QuizService.GetQuizzesAsync();
    }

    private void NavigateToCreateQuiz()
    {
        Navigation.NavigateTo("/create-quiz");
    }

    private void NavigateToQuiz(int quizId)
    {
        Navigation.NavigateTo($"/quizzes/{quizId}");
    }

    private void NaviagteToStatistics(int quizId)
    {
        Navigation.NavigateTo($"/quiz-stats/{quizId}");
    }

    private void NavigateToEditQuiz(int quizId)
    {
        Navigation.NavigateTo($"/create-quiz/{quizId}");
    }
}
